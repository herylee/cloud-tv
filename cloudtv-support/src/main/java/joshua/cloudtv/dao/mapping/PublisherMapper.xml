<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="joshua.cloudtv.dao.mapper.PublisherMapper">
  <resultMap id="BaseResultMap" type="joshua.cloudtv.dao.model.Publisher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="cert_type" jdbcType="TINYINT" property="certType" />
    <result column="cert_id" jdbcType="VARCHAR" property="certId" />
    <result column="proof_url" jdbcType="VARCHAR" property="proofUrl" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="experience" jdbcType="BIGINT" property="experience" />
    <result column="publisher_condition" jdbcType="INTEGER" property="publisherCondition" />
    <result column="follower_count" jdbcType="INTEGER" property="followerCount" />
    <result column="sum_watch_count" jdbcType="INTEGER" property="sumWatchCount" />
  </resultMap>
  <sql id="Base_Column_List">
    id, room_id, realname, cert_type, cert_id, proof_url, phone_number, level, experience, 
    publisher_condition, follower_count, sum_watch_count
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from publisher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from publisher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="joshua.cloudtv.dao.model.Publisher">
    insert into publisher (id, room_id, realname, 
      cert_type, cert_id, proof_url, 
      phone_number, level, experience, 
      publisher_condition, follower_count, sum_watch_count
      )
    values (#{id,jdbcType=INTEGER}, #{roomId,jdbcType=INTEGER}, #{realname,jdbcType=VARCHAR}, 
      #{certType,jdbcType=TINYINT}, #{certId,jdbcType=VARCHAR}, #{proofUrl,jdbcType=VARCHAR}, 
      #{phoneNumber,jdbcType=VARCHAR}, #{level,jdbcType=TINYINT}, #{experience,jdbcType=BIGINT}, 
      #{publisherCondition,jdbcType=INTEGER}, #{followerCount,jdbcType=INTEGER}, #{sumWatchCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="joshua.cloudtv.dao.model.Publisher">
    insert into publisher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="certType != null">
        cert_type,
      </if>
      <if test="certId != null">
        cert_id,
      </if>
      <if test="proofUrl != null">
        proof_url,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="experience != null">
        experience,
      </if>
      <if test="publisherCondition != null">
        publisher_condition,
      </if>
      <if test="followerCount != null">
        follower_count,
      </if>
      <if test="sumWatchCount != null">
        sum_watch_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="certType != null">
        #{certType,jdbcType=TINYINT},
      </if>
      <if test="certId != null">
        #{certId,jdbcType=VARCHAR},
      </if>
      <if test="proofUrl != null">
        #{proofUrl,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="experience != null">
        #{experience,jdbcType=BIGINT},
      </if>
      <if test="publisherCondition != null">
        #{publisherCondition,jdbcType=INTEGER},
      </if>
      <if test="followerCount != null">
        #{followerCount,jdbcType=INTEGER},
      </if>
      <if test="sumWatchCount != null">
        #{sumWatchCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="joshua.cloudtv.dao.model.Publisher">
    update publisher
    <set>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="certType != null">
        cert_type = #{certType,jdbcType=TINYINT},
      </if>
      <if test="certId != null">
        cert_id = #{certId,jdbcType=VARCHAR},
      </if>
      <if test="proofUrl != null">
        proof_url = #{proofUrl,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="experience != null">
        experience = #{experience,jdbcType=BIGINT},
      </if>
      <if test="publisherCondition != null">
        publisher_condition = #{publisherCondition,jdbcType=INTEGER},
      </if>
      <if test="followerCount != null">
        follower_count = #{followerCount,jdbcType=INTEGER},
      </if>
      <if test="sumWatchCount != null">
        sum_watch_count = #{sumWatchCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="joshua.cloudtv.dao.model.Publisher">
    update publisher
    set room_id = #{roomId,jdbcType=INTEGER},
      realname = #{realname,jdbcType=VARCHAR},
      cert_type = #{certType,jdbcType=TINYINT},
      cert_id = #{certId,jdbcType=VARCHAR},
      proof_url = #{proofUrl,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      level = #{level,jdbcType=TINYINT},
      experience = #{experience,jdbcType=BIGINT},
      publisher_condition = #{publisherCondition,jdbcType=INTEGER},
      follower_count = #{followerCount,jdbcType=INTEGER},
      sum_watch_count = #{sumWatchCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>